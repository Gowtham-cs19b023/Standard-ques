Leetcode 695               : Max Area of Island
Detailed video explanation : https://youtu.be/_wLMk_Qbl08
===================================================


C++:
----
class Solution {
    int dfs(vector<vector<int>>& grid, int i, int j){
        int r = grid.size();
        int c = grid[0].size();
        if(i < 0 || j < 0 || i >= r || j >= c || grid[i][j] != 1)
            return 0;
        grid[i][j] = 2;
        return (1 + dfs(grid, i+1, j) + dfs(grid, i-1, j) + dfs(grid, i, j+1) + dfs(grid, i, j-1));
    }
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int r = grid.size();
        int c = grid[0].size();
        int result = 0;
        for(int i = 0; i < r; ++i){
            for(int j = 0; j < c; ++j)
                if(grid[i][j] == 1) result = max(result, dfs(grid, i, j));
        }
        return result;
    }
};



Python3:
-------
class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        r, c = len(grid), len(grid[0])
        
        def dfs(grid, i, j):
            if i < 0 or j < 0 or i >= r or j >= c or grid[i][j] != 1:
                return 0
            grid[i][j] = 2
            return (1 + dfs(grid, i+1, j) + dfs(grid, i-1, j) + dfs(grid, i, j+1) + dfs(grid, i, j-1))
        
        result = 0
        for i in range(r):
            for j in range(c):
                if grid[i][j] == 1: result = max(result, dfs(grid, i, j))
        
        return result
